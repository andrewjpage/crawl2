<?xml version="1.0"?>
<project name="crawl" basedir="." 
    xmlns:ivy="antlib:org.apache.ivy.ant" 
    default="compile"
>


	
<path id="ivy.lib.path">
    <fileset dir="./lib/local/" includes="*.jar"/>
</path>	
<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	
<property file="${config}"  />

<property name="build" value="${basedir}/ant" />
<property name="build.packages.home" value="${build}/packages" />
<property name="build.classes.home" value="${build}/classes" />

<property name="build.war.name" value="${deploy.name}"  />

<property name="log4j.config" value="${basedir}/war/WEB-INF/log4j.properties"/> 	
	
<property name="lib.dir" value="${basedir}/lib" />
<property name="ivy.lib.dir" value="${basedir}/lib/ivy" />

<property name="report.home" value="${basedir}/tmp" />
	
<property name="elasticsearch.data.home" value="${basedir}/data" />

<path id="lib.compile.path">
	<fileset dir="${ivy.lib.dir}/compile" />
	<fileset dir="${lib.dir}/local" />
</path>

<path id="lib.jar.path">
    <fileset dir="${ivy.lib.dir}/jar" />
	<fileset dir="${lib.dir}/local" />
</path>

<path id="test">
    <pathelement location="lib/ivy/compile/jar-junit-junit-4.8.2.jar" />
	<pathelement location="lib/ivy/compile/jar-com.springsource.org.postgresql.jdbc4-com.springsource.org.postgresql.jdbc4-8.3.604.jar" />
	<pathelement location="${build.packages.home}/jar-mybatis-mybatis-3.0.2.jar" />
    <pathelement location="${build.classes.home}" />
	<pathelement location="${basedir}" />
</path>


<!-- <setproxy proxyhost="wwwcache.sanger.ac.uk" proxyport="3128"/> -->


<target name="setup">
    <mkdir dir="${build.packages.home}"/>
	<mkdir dir="${build.classes.home}"/>
    <mkdir dir="${ivy.lib.dir}" />
	<mkdir dir="${report.home}" />
</target>

<target name="clean">
    <delete dir="${build}" includeEmptyDirs="true"/>
    <delete dir="${ivy.lib.dir}" includeEmptyDirs="true"/>
	<delete dir="${report.home}" includeEmptyDirs="true"/>
	<delete dir="war/WEB-INF/classes/" includeEmptyDirs="true"/>
	<delete file="war/WEB-INF/crawl-repository.xml" />
	<delete dir="${build}" includeEmptyDirs="true"/>
</target>
	
<target name="clean-es">
	<!-- this is kept separate from the clean target to stop us from deleting data accidentally -->
	<delete dir="${elasticsearch.data.home}" includeEmptyDirs="true" />
</target>


<target name="resolve-compile" unless="disable.library.resolution"  >  
	<!-- log="quiet" -->
    <ivy:resolve  conf="compile"/>
    <ivy:retrieve  validate="false" pattern="${ivy.lib.dir}/[conf]/[type]-[module]-[artifact]-[revision].[ext]" />  
</target>

<target name="resolve-war" unless="disable.library.resolution"  >
	<!-- log="quiet" -->
    <ivy:resolve  conf="war"/>
    <ivy:retrieve  validate="false" pattern="${ivy.lib.dir}/[conf]/[type]-[module]-[artifact]-[revision].[ext]" />
</target>
	
<target name="resolve-jar" unless="disable.library.resolution"  >
	<!-- log="quiet" -->
    <ivy:resolve  conf="jar"/>
    <ivy:retrieve  validate="false" pattern="${ivy.lib.dir}/[conf]/[type]-[module]-[artifact]-[revision].[ext]" />
</target>

<target name="resolve-jetty" unless="disable.library.resolution"  >
    <!-- log="quiet" -->
    <ivy:resolve  conf="jetty"/>
    <ivy:retrieve  validate="false" pattern="${ivy.lib.dir}/[conf]/[type]-[module]-[artifact]-[revision].[ext]" />
</target>	

<target name="compile" depends="setup" >
    <javac fork="true"
        debug="true"
        verbose="${verbose}"
        includes="**"
        destdir="${build.classes.home}"
        srcdir="${basedir}/src" 
        classpathref="lib.compile.path"
        />
	
	<copy file="${basedir}/src/org/genedb/crawl/model/jaxb.index" 
		tofile="${build.classes.home}/org/genedb/crawl/model/jaxb.index" 
		overwrite="true" />
	
</target>
	

<target name="compile-test" depends="compile" >
    <javac fork="true"
        debug="true"
        verbose="${verbose}"
        includes="**"
        destdir="${build.classes.home}"
        srcdir="${basedir}/tst" 
        classpathref="lib.compile.path"
        />
</target>



<target name="package-war" depends="compile" >
    
	<fail message="The 'config' property must be set" unless="config"/>
	<fail message="The 'deploy.name' property must be set" unless="deploy.name" />
	
	<fail message="The 'resource.type' property must be set" unless="resource.type"/>
	
	<copy file="etc/config/crawl-${resource.type}.xml" tofile="war/WEB-INF/crawl-repository.xml" overwrite="true" />
	
	
	<copy file="${config}" tofile="war/WEB-INF/classes/project.properties" overwrite="true" />
	
	<copy todir="war/WEB-INF/classes/sql">
        <fileset dir="sql/">
        	<include name="**/*.xml"/>
        </fileset>
    </copy>
	
	<mkdir dir="${lib.dir}/wartmp" />
	
	<copy todir="${lib.dir}/wartmp" >
		<fileset dir="${lib.dir}/local">
            <include name="**/*.jar"/>
            <exclude name="**/*-sources.jar" />
        </fileset>
        <mapper type="flatten"/>
	</copy>
	
	<copy todir="${lib.dir}/wartmp" >
        <fileset dir="${ivy.lib.dir}/war">
            <include name="**/*.jar"/>
            <exclude name="**/*-sources.jar" />
        </fileset>
        <mapper type="flatten"/>
    </copy>
	
    <war warfile="${build.packages.home}/${build.war.name}.war" webxml="${basedir}/war/WEB-INF/web.xml" >
    	
    	<lib dir="${lib.dir}/wartmp" >
    		<include name="**/*.jar"/>
        </lib>
    	
        <fileset dir="war/"/>
        <classes dir="${build.classes.home}">
            <include name="**"/>
        </classes>
    </war>
	
	<delete dir="${lib.dir}/wartmp" includeEmptyDirs="true"/>
	
</target>
	
<target name="run-jetty" depends="package-war" >
	
	<fail message="The 'config' property must be set" unless="config"/>
	
	<!--java -jar lib/ivy/compile/jar-jetty-runner-jetty-runner-7.1.6.v20100715.jar dist/crawl.war -->
	<java fork="true" maxmemory="128m" failonerror="true" jar="${ivy.lib.dir}/jetty/jar-jetty-runner-jetty-runner-7.2.0.RC0.jar"  >
		<arg line=" ${build.packages.home}/${build.war.name}.war "/>
	</java>
	
</target>


<target name="package-jar" depends="compile" >
	
	<!-- generate a path string for use in the crawl.jar manifest -->
	<pathconvert property="jarclasspath" pathsep=" ">
	    <path refid="lib.jar.path" />
	    <flattenmapper />
	</pathconvert>
    
	<jar destfile="${build.packages.home}/crawl.jar"  >
		
		<fileset dir=".">
			  <include name="sql/**.sql" />
		</fileset>
		
		<fileset dir="${build.classes.home}">
			  <include name="**"/>
		</fileset>
		
		<manifest>
			<attribute name="Main-Class" value="org.genedb.crawl.Main"/>
			<!--<attribute name="Class-Path" value="log4j.jar" />-->  
			<attribute name="Class-Path" value="${jarclasspath}" />
		</manifest>
	</jar>
	
	<!-- copy all the dependencies into the dist folder, so that the craw.jar can access them-->
	<copy todir="${build.packages.home}">
		<path refid="lib.jar.path" />
		<mapper type="flatten"/>
	</copy>
	
	<copy todir="${build.packages.home}" >
		<path>
		    <fileset dir="${basedir}/etc/" />
		</path>
	</copy>
	
	<!-- don't keep the generated project.properties file when we're done packaging -->
	<delete file="war/WEB-INF/classes/project.properties" />
</target>

<target name="undeploy">
	<fail message="The 'config' property must be set" unless="config"/>
	<delete dir="${deploy.dir}/${build.war.name}" includeEmptyDirs="true"/>
    <delete file="${deploy.dir}/${build.war.name}.war" />
</target>
	
<target name="deploy" depends="package-war, undeploy" >
	<fail message="The 'config' property must be set" unless="config"/>
    <copy file="${build.packages.home}/${build.war.name}.war" todir="${deploy.dir}/"/>
</target>

	
<target name="test" >
	<fail message="The 'config' property must be set" unless="config"/>
	<junit printsummary="yes" fork="yes" haltonfailure="yes">
		 <classpath>
		    <path refid="test"/>
        </classpath>
		
 	    <jvmarg value="-Ddbhost=${dbhost}"/>
		<jvmarg value="-Ddbpassword=${dbpassword}"/>
 	    <jvmarg value="-Ddbuser=${dbuser}"/>
 	    <jvmarg value="-Ddbport=${dbport}"/>
		<jvmarg value="-Ddbname=${dbname}"/>
		
        <formatter type="plain"/>
		        
        <!-- add tests or comment out as necessary -->

        <test todir="${report.home}" 
              name="org.gmod.cat.TestSimple" 
              haltonfailure="yes" />
	</junit>  
	
</target>

<target name="resolve" depends="setup,resolve-compile,resolve-war,resolve-jar,resolve-jetty" />
<target name="setup-complete" depends="resolve,package-jar" />


</project>