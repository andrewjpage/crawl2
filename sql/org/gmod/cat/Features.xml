<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="org.gmod.cat.Features">  

  
  <select id="getFeatureID" resultType="int">
    <![CDATA[
        select feature_id from feature where uniquename = #{uniquename}
    ]]>
  </select>
  
  <select id="getGeneForFeature" resultType="org.genedb.crawl.model.HierarchyGeneFetchResult" >
        SELECT

			f.uniquename as f,
			ftype.name as ftype,
			f2.uniquename as f2,
			ftype2.name as ftype2,
			f3.uniquename as f3,
			ftype3.name as ftype3
			
		FROM feature f
		JOIN cvterm ftype ON f.type_id = ftype.cvterm_id 
		
		LEFT JOIN feature_relationship fr ON fr.subject_id = f.feature_id and fr.type_id IN (42, 69)
		LEFT JOIN feature f2 ON fr.object_id = f2.feature_id
		LEFT JOIN cvterm ftype2 ON f2.type_id = ftype2.cvterm_id 
		
		LEFT JOIN feature_relationship fr2 ON fr2.subject_id = fr.object_id and fr2.type_id IN (42, 69)
		LEFT JOIN feature f3 ON fr2.object_id = f3.feature_id AND f3.type_id IN ('792', '423')
		LEFT JOIN cvterm ftype3 ON f3.type_id = ftype3.cvterm_id 
		
		WHERE f.uniquename in 
		        <foreach item="item" index="index" collection="features" open="(" separator="," close=")"> #{item}</foreach> 
		
		
  </select>
  
  <select id="getRelationshipsParents" resultType="org.genedb.crawl.model.HierarchyRelation" >
        SELECT 
			target.uniquename as feature,
			parent.uniquename as uniquename,
			parent.name as name,
			'parent' as relationship,
			relationship_type.name as relationship_type,
			type.name as type
			
		FROM feature target
		
		JOIN feature_relationship fr ON fr.subject_id = target.feature_id and fr.type_id IN 
		      <foreach item="item" index="index" collection="relationships" open="(" separator="," close=")">#{item}</foreach>
		JOIN feature parent ON fr.object_id = parent.feature_id
		JOIN cvterm relationship_type ON fr.type_id = relationship_type.cvterm_id
		JOIN cvterm type ON parent.type_id = type.cvterm_id
		
		WHERE target.uniquename = #{feature}  
  </select>
  
  <select id="getRelationshipsChildren" resultType="org.genedb.crawl.model.HierarchyRelation" >
        SELECT

			target.uniquename as feature,
			child.uniquename as uniquename,
			child.name as name,
			'child' as relationship,
			relationship_type.name as relationship_type,
			type.name as type
		
		FROM feature target
		
		JOIN feature_relationship fr2 ON fr2.object_id = target.feature_id and fr2.type_id IN 
             <foreach item="item" index="index" collection="relationships" open="(" separator="," close=")">#{item}</foreach>
		JOIN feature child ON fr2.subject_id = child.feature_id
		JOIN cvterm relationship_type ON fr2.type_id = relationship_type.cvterm_id
		JOIN cvterm type ON child.type_id = type.cvterm_id
		
		WHERE target.uniquename = #{feature} 
		
  </select>
  
  
  <select id="coordinates" resultMap="regionCoordinatesList" >
  
        SELECT sf.uniquename AS region, f.uniquename AS uniqueName, f.name as name, fl.fmin as fmin, fl.fmax as fmax, fl.phase as phase, fl.strand as strand
		  FROM feature f
		  JOIN featureloc fl ON f.feature_id = fl.feature_id 
		  JOIN feature sf ON fl.srcfeature_id = sf.feature_id
		WHERE f.uniquename in <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach> 
	   
	   <if test="region != null"> 
		  AND sf.uniquename = #{region}
	   </if>
  
  </select>
  
  <resultMap id="regionCoordinatesList" type="org.genedb.crawl.model.Feature">
        <result property="uniqueName" column="uniqueName"/>
        <result property="name" column="name"/>
        <collection property="coordinates" ofType="org.genedb.crawl.model.Coordinates"> 
            <result property="region" column="region"/> 
            <result property="fmin" column="fmin"/> 
            <result property="fmax" column="fmax"/> 
            <result property="strand" column="strand"/> 
       </collection>
    </resultMap>
    
  
    <select id="featuresLike" resultType="org.genedb.crawl.model.Feature" >
        
        SELECT f.uniquename as uniqueName, f.name as name
        FROM feature f
        
        <if test="region != null"> 
            JOIN featureloc fl ON fl.feature_id = f.feature_id AND srcfeature_id=(SELECT feature_id FROM feature WHERE uniquename= #{region})
        </if>
        
        <choose> 
           <when test="regex == true"> 
              WHERE f.uniquename ~* #{term} or f.name ~* #{term} 
           </when>
           <otherwise> 
              WHERE f.uniquename = #{term}  or f.name = #{term}  
           </otherwise>
       </choose> 
        
    </select>

    <select id="synonymsLike" resultMap="synonymsList" >
    SELECT f.uniquename as uniqueName, f.name as name, synonym.name as synonym, cvterm.name as type, feature_synonym.is_current as is_current
    
    FROM feature f

		JOIN feature_synonym ON f.feature_id = feature_synonym.feature_id 
		JOIN synonym ON feature_synonym.synonym_id = synonym.synonym_id 
		JOIN cvterm ON synonym.type_id = cvterm.cvterm_id 
		
		<if test="region != null"> 
            JOIN featureloc fl ON fl.feature_id = f.feature_id AND srcfeature_id=(SELECT feature_id FROM feature WHERE uniquename= #{region})
        </if>
        
        <choose> 
           <when test="regex == true"> 
              WHERE synonym.name ~* #{term}
           </when>
           <otherwise> 
              WHERE synonym.name = #{term} 
           </otherwise>
       </choose> 
            
    </select>  
    
    <select id="synonyms" resultMap="synonymsList"  >
    
        SELECT feature.uniquename as uniqueName, feature.name as name, synonym.name as synonym, cvterm.name as type, feature_synonym.is_current as is_current
            FROM feature_synonym 
            JOIN feature ON feature.feature_id = feature_synonym.feature_id 
            JOIN synonym ON feature_synonym.synonym_id = synonym.synonym_id
            JOIN cvterm ON synonym.type_id = cvterm.cvterm_id
            WHERE feature.uniquename IN <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach> 
            <if test="types != null"> 
                AND cvterm.name IN <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach> 
            </if>
            
        UNION
        SELECT feature.uniquename as uniqueName, feature.name as name, synonym.name as synonym, cvterm.name as type, feature_synonym.is_current as is_current
            FROM feature_synonym 
            JOIN feature ON feature.feature_id = feature_synonym.feature_id 
            JOIN synonym ON feature_synonym.synonym_id = synonym.synonym_id
            JOIN cvterm ON synonym.type_id = cvterm.cvterm_id
            WHERE synonym.name IN <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach> 
                 <if test="types != null"> 
                    AND cvterm.name IN <foreach item="item" index="index" collection="types" open="(" separator="," close=")">#{item}</foreach> 
                </if>
                
    </select>
    
    
    
    <resultMap id="synonymsList" type="org.genedb.crawl.model.Feature">
        <result property="uniqueName" column="uniqueName"/>
        <result property="name" column="name"/>
        <collection property="synonyms" ofType="org.genedb.crawl.model.Synonym"> 
            <result property="synonym" column="synonym"/> 
            <result property="synonymtype" column="type"/> 
            <result property="is_current" column="is_current"/>
        </collection>
    </resultMap>
    
    
    
     <select id="properties"  resultMap="propertiesList" >
        SELECT feature.uniquename as uniqueName, feature.name as name, cvterm.name as propname, featureprop.value as value, featureprop.rank as rank 
            FROM featureprop 
            LEFT JOIN cvterm on cvterm.cvterm_id = featureprop.type_id 
            LEFT JOIN feature on featureprop.feature_id = feature.feature_id
            WHERE uniquename in <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach>
    </select>
    
    <resultMap id="propertiesList" type="org.genedb.crawl.model.Feature">
        <result property="uniqueName" column="uniqueName"/>
        <result property="name" column="name"/>
         <collection property="properties" ofType="org.genedb.crawl.model.FeatureProperty"> 
            <result property="name" column="propname"/> 
            <result property="value" column="value"/> 
            <result property="rank" column="rank"/>
        </collection>
    </resultMap>
   
    
    <select id="pubs" resultMap="pubsList">
        SELECT 
		    feature.uniquename as uniqueName, 
		    feature.name as name,
		    split_part(pub.uniquename, ':', 1) as database,
		    split_part(pub.uniquename, ':', 2) as accession
		FROM feature
		JOIN feature_pub ON feature_pub.feature_id = feature.feature_id
		JOIN pub on pub.pub_id = feature_pub.pub_id
		WHERE feature.uniquename in <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach>
    </select>
    
    
    <resultMap id="pubsList" type="org.genedb.crawl.model.Feature">
        <result property="uniqueName" column="uniqueName"/>
        <result property="name" column="name"/>
         <collection property="pubs" ofType="org.genedb.crawl.model.Pub"> 
            <result property="database" column="database"/> 
            <result property="accession" column="accession"/> 
        </collection>
    </resultMap>
    
    
    <select id="dbxrefs" resultMap="dbxrefsList" >
        
        SELECT 
		    feature.uniquename as uniqueName,
		    feature.name as name,
		    dbxref.accession as accession,
		    db.name as database
		FROM feature
		JOIN feature_dbxref ON feature_dbxref.feature_id = feature.feature_id
		JOIN dbxref ON dbxref.dbxref_id = feature_dbxref.dbxref_id
		JOIN db ON db.db_id = dbxref.db_id
		WHERE feature.uniquename IN <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach>
		UNION
		SELECT 
		    feature.uniquename as uniqueName,
		    feature.name as name,
		    dbxref.accession as accession,
		    db.name as database
		FROM feature
		JOIN dbxref ON dbxref.dbxref_id = feature.dbxref_id
		JOIN db ON db.db_id = dbxref.db_id
		WHERE feature.uniquename IN <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach>
        
    </select>  
  
    
    <resultMap id="dbxrefsList" type="org.genedb.crawl.model.Feature">
        <result property="uniqueName" column="uniqueName"/>
        <result property="name" column="name"/>
         <collection property="dbxrefs" ofType="org.genedb.crawl.model.Dbxref"> 
            <result property="database" column="database"/> 
            <result property="accession" column="accession"/> 
        </collection>
    </resultMap>
    
    <select id="terms" resultMap="cvtermsList" >
       SELECT 
           f.uniquename as uniqueName,
           f.name as name,
           fc.feature_cvterm_id as feature_cvterm_id, 
           fc.is_not as is_not, 
           d.accession, 
           f.uniquename as feature, 
           ct.name as cvterm, 
           c.name as cv, 
           fcp.value as prop, 
           fcpct.name as proptype, 
           fcpc.name as proptypecv
		FROM feature f
			JOIN feature_cvterm fc ON f.feature_id = fc.feature_id
			JOIN cvterm ct ON fc.cvterm_id = ct.cvterm_id
			JOIN cv c ON c.cv_id = ct.cv_id
			    <if test="cvs != null"> 
                    AND c.name IN  <foreach item="item" index="index" collection="cvs" open="(" separator="," close=")">#{item}</foreach> 
                </if>
			JOIN dbxref d ON ct.dbxref_id = d.dbxref_id
			LEFT OUTER JOIN feature_cvtermprop fcp on fc.feature_cvterm_id = fcp.feature_cvterm_id
			LEFT OUTER JOIN cvterm fcpct on fcp.type_id = fcpct.cvterm_id 
			LEFT OUTER JOIN cv fcpc ON fcpct.cv_id = fcpc.cv_id
		
		WHERE f.uniquename in <foreach item="item" index="index" collection="features" open="(" separator="," close=")">#{item}</foreach>
    </select>
    
     <resultMap id="cvtermsList" type="org.genedb.crawl.model.Feature">
        <result property="uniqueName" column="uniqueName"/>
        <result property="name" column="name"/>
         <collection property="terms" ofType="org.genedb.crawl.model.Cvterm"> 
            <result property="accession" column="accession"/>
            <result property="is_not" column="is_not"/> 
            <result property="name" column="cvterm"/>
            <association property="cv" javaType="org.genedb.crawl.model.Cv" >
                <result property="name" column="cv"/>
            </association> 
            <collection property="props" ofType="org.genedb.crawl.model.CvtermProp">
                <result property="value" column="prop"/>
                <association property="type" javaType="org.genedb.crawl.model.Cvterm">
                    <result property="name" column="proptype"/>
                    <association property="cv" javaType="org.genedb.crawl.model.Cv" >
                        <result property="name" column="proptypecv"/>
                    </association> 
                </association> 
            </collection> 
            <collection property="pubs" ofType="org.genedb.crawl.model.Pub" select="featureCvTermPubs" column="feature_cvterm_id"  />
            <collection property="dbxrefs" ofType="org.genedb.crawl.model.Dbxref" select="featureCvTermDbxrefs" column="feature_cvterm_id"  /> 
        </collection>
    </resultMap>
    
</mapper> 
