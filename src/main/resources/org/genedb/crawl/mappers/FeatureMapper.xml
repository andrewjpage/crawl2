<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="org.genedb.crawl.mappers.FeatureMapper">  
    
    <select id="get" resultMap="org.genedb.crawl.mappers.FeaturesMapper.basicFeatureResult" >
        SELECT 
            feature_id, 
            organism_id, 
            uniqueName,
            f.name,
            type.name as type 
        FROM feature f
        JOIN cvterm type ON type.cvterm_id = f.type_id 
        WHERE <include refid="featureSelector"/>
    </select>
    
    <!-- 
    
     -->
    <select id="getOfType" resultMap="typedFeatureResult" >
        SELECT 
            feature_id, 
            organism_id, 
            uniqueName,
            f.name,
            type.name as type 
        FROM feature f
        JOIN cvterm type ON type.cvterm_id = f.type_id <if test="type != null"> and type.name = #{type} </if> 
        WHERE <include refid="featureSelector"/> 
    </select>
    
    <resultMap type="org.genedb.crawl.model.LocatedFeature"
    	id="typedFeatureResult" extends="org.genedb.crawl.mappers.FeaturesMapper.basicFeatureResult">
    	
    	<!-- if none of the types are found by this discriminator, the resultmap 
    	defined outside of the discriminator block will be returned instead 
    	as this resultMap inherits from basicFeatureResult, 
    	this will be whatever is contained in basicFeatureResult
    	-->
    	<discriminator column="type" javaType="String" >
    	   <case value="gene" resultMap="geneResult" />
    	   <case value="exon" resultMap="exonResult" />
    	   <case value="transcript" resultMap="transcriptResult" />
    	</discriminator> 
    	
    </resultMap>

    <resultMap type="org.genedb.crawl.model.Gene" id="geneResult" extends="org.genedb.crawl.mappers.FeaturesMapper.basicFeatureResult"></resultMap>
    <resultMap type="org.genedb.crawl.model.Transcript" id="transcriptResult" extends="org.genedb.crawl.mappers.FeaturesMapper.basicFeatureResult"></resultMap>
    <resultMap type="org.genedb.crawl.model.Exon" id="exonResult" extends="org.genedb.crawl.mappers.FeaturesMapper.basicFeatureResult"></resultMap> 
    
    
    <select id="properties"  resultMap="properties" parameterType="org.genedb.crawl.model.Feature" >
        SELECT 
            cvterm.name as propname, 
            featureprop.value as value, 
            featureprop.rank as rank 
       FROM featureprop 
       LEFT JOIN cvterm on cvterm.cvterm_id = featureprop.type_id 
       LEFT JOIN feature f on featureprop.feature_id = f.feature_id
       WHERE <include refid="featureSelector"/>
       
    </select>
    
    <resultMap id="properties" type="org.genedb.crawl.model.Property">
        <result property="name" column="propname"/> 
        <result property="value" column="value"/> 
        <result property="rank" column="rank"/>
        <association property="type" resultMap="org.genedb.crawl.mappers.FeaturesMapper.type" />
    </resultMap>
    
    
    
    
    
     <select id="terms" resultMap="terms"  >
       SELECT 
           
           fc.feature_cvterm_id as feature_cvterm_id, 
           fc.is_not as is_not, 
           d.accession, 
           f.uniquename as feature, 
           ct.name as cvterm, 
           c.name as cv, 
           fcp.value as prop, 
           fcpct.name as type_name, 
           fcpc.name as type_cv
        FROM feature f
            JOIN feature_cvterm fc ON f.feature_id = fc.feature_id
            JOIN cvterm ct ON fc.cvterm_id = ct.cvterm_id
            JOIN cv c ON c.cv_id = ct.cv_id
                
            JOIN dbxref d ON ct.dbxref_id = d.dbxref_id
            LEFT OUTER JOIN feature_cvtermprop fcp on fc.feature_cvterm_id = fcp.feature_cvterm_id
            LEFT OUTER JOIN cvterm fcpct on fcp.type_id = fcpct.cvterm_id 
            LEFT OUTER JOIN cv fcpc ON fcpct.cv_id = fcpc.cv_id
        
        WHERE <include refid="featureSelector"/>
        
    </select>
    
    <!-- <if test="cvs != null"> 
                    AND c.name IN  <foreach item="item" index="index" collection="cvs" open="(" separator="," close=")">#{item}</foreach> 
                </if> -->
    
     <resultMap id="terms" type="org.genedb.crawl.model.Cvterm">
         <result property="accession" column="accession"/>
         <result property="is_not" column="is_not"/> 
         <result property="name" column="cvterm"/>
         <association property="cv" javaType="org.genedb.crawl.model.Cv" >
                <result property="name" column="cv"/>
            </association>
         <collection property="props" ofType="org.genedb.crawl.model.CvtermProp">
             <result property="value" column="prop"/>
             <association property="type" resultMap="org.genedb.crawl.mappers.FeaturesMapper.type" />
         </collection> 
         <collection property="pubs" ofType="org.genedb.crawl.model.Pub" select="org.genedb.crawl.mappers.FeatureCvtermMapper.featureCvTermPubs" column="feature_cvterm_id"  />
         <collection property="dbxrefs" ofType="org.genedb.crawl.model.Dbxref" select="org.genedb.crawl.mappers.FeatureCvtermMapper.featureCvTermDbxrefs" column="feature_cvterm_id"  /> 
    </resultMap>
    
    <sql id="coordinateSelector">
        SELECT 
            sf.uniquename AS region, 
            f.uniquename AS uniqueName, 
            f.name as name, 
            f.organism_id, 
            fl.fmin as fmin, 
            fl.fmax as fmax, 
            fl.phase as phase, 
            fl.strand as strand,
            
            exists(
                select type_id from featureprop sfp 
                where sfp.feature_id = sf.feature_id 
                    and sfp.type_id = 
                        (<include refid="org.genedb.crawl.mappers.RegionsMapper.topleveltype"/>)
            ) as toplevel
            
          FROM feature f
          JOIN featureloc fl ON f.feature_id = fl.feature_id 
          JOIN feature sf ON fl.srcfeature_id = sf.feature_id
          JOIN cvterm c on sf.type_id = c.cvterm_id 
    </sql>
    
    <select id="coordinates" resultMap="coordinates" >
        <include refid="coordinateSelector" /> WHERE <include refid="featureSelector"/>  
        
       <!--  SELECT 
            sf.uniquename AS region, 
            f.uniquename AS uniqueName, 
            f.name as name, 
            sfp.value as toplevel, 
            fl.fmin as fmin, 
            fl.fmax as fmax, 
            fl.phase as phase, 
            fl.strand as strand
          FROM feature f
          JOIN featureloc fl ON f.feature_id = fl.feature_id 
          JOIN feature sf ON fl.srcfeature_id = sf.feature_id
          LEFT OUTER JOIN featureprop sfp on sf.feature_id = sfp.feature_id and sfp.type_id = 
              (select cvterm_id from cvterm join cv using (cv_id) where cv.name = 'genedb_misc' and cvterm.name = 'top_level_seq')
          
        WHERE <include refid="featureSelector"/> 
        -->
  
  </select>
  
    <resultMap id="coordinates" type="org.genedb.crawl.model.Coordinates">
       <result property="region" column="region"/> 
       <result property="fmin" column="fmin"/> 
       <result property="fmax" column="fmax"/> 
       <result property="strand" column="strand"/>
       <result property="toplevel" column="toplevel"/>  
    </resultMap>
    
    <select id="synonyms" resultType="org.genedb.crawl.model.Synonym" >
        SELECT synonym.name as synonym, 
            cvterm.name as synonymtype, 
            feature_synonym.is_current as is_current
            FROM feature_synonym 
            JOIN feature ON feature.feature_id = feature_synonym.feature_id 
            JOIN synonym ON feature_synonym.synonym_id = synonym.synonym_id
            JOIN cvterm ON synonym.type_id = cvterm.cvterm_id
            WHERE feature.uniquename = #{uniqueName} 
    </select>
    
    <select id="pubs" resultType="org.genedb.crawl.model.Pub" >
        SELECT 
            pub.uniquename,
            split_part(pub.uniquename, ':', 1) as database,
            split_part(pub.uniquename, ':', 2) as accession
        FROM feature
        JOIN feature_pub ON feature_pub.feature_id = feature.feature_id
        JOIN pub on pub.pub_id = feature_pub.pub_id
        WHERE feature.uniquename = #{uniqueName}
    </select>
    
    <sql id="relationships">
        
            relationship_type.name as type
            
        FROM feature subject
        
        JOIN feature_relationship fr ON fr.subject_id = subject.feature_id 
            and fr.type_id IN 
              <foreach item="cvterm" index="index" collection="relationships" open="(" separator="," close=")">#{cvterm.cvterm_id}</foreach>
        
        JOIN feature object ON fr.object_id = object.feature_id
        
        JOIN cvterm relationship_type ON fr.type_id = relationship_type.cvterm_id
        JOIN cvterm subject_type ON subject.type_id = subject_type.cvterm_id
        JOIN cvterm object_type ON object.type_id = object_type.cvterm_id
    </sql>
    
    <select id="parents" resultMap="relationships" >
    SELECT 
            object.uniquename as object_uniquename,
            object_type.name as object_type,
            <include refid="relationships"/>
            
        WHERE subject.uniquename = #{feature.uniqueName}  
    </select>
    
    <select id="children" resultMap="relationships" >
    SELECT 
            subject.uniquename as subject_uniquename,
            subject_type.name as subject_type,
            <include refid="relationships"/>
            
        WHERE object.uniquename = #{feature.uniqueName}  
    </select>
  
  <resultMap type="org.genedb.crawl.model.FeatureRelationship" id="relationships">
    <association property="subject" javaType="org.genedb.crawl.model.Feature" >
    	<result column="subject_uniquename" property="uniqueName" />
    	<association property="type" javaType="org.genedb.crawl.model.Cvterm">
            <result column="subject_type" property="name" />
        </association>
    </association>
    <association property="object" javaType="org.genedb.crawl.model.Feature" >
        <result column="object_uniquename" property="uniqueName" />
        <association property="type" javaType="org.genedb.crawl.model.Cvterm">
            <result column="object_type" property="name" />
        </association> 
    </association>
    <association property="type" javaType="org.genedb.crawl.model.Cvterm">
        <result column="type" property="name" />
    </association>
  </resultMap>
  
    
    
    <sql id="featureSelector">
        
        f.uniquename = #{uniqueName} 
        
        <if test="organism_id != null"> 
            AND f.organism_id = #{organism_id} 
        </if>
        
        <if test="name != null"> 
            AND f.name = #{name}
        </if>
        
    </sql>
    
    
    <delete id="delete">
        delete from feature where <include refid="featureSelector"/> 
    </delete>
    
    <select id="transcripts" resultMap="transcripts" >
        SELECT
            
            transcript.uniquename as uniqueName
            <if test="exons == true">
            , exon.uniqueName as exonUniqueName
            </if>
            
        FROM feature f
        
        JOIN feature_relationship fr ON fr.object_id = f.feature_id and fr.type_id IN (42, 69)
        JOIN feature transcript ON fr.subject_id = transcript.feature_id
        JOIN cvterm transcript_type ON transcript.type_id = transcript_type.cvterm_id AND transcript_type.name = 'mRNA'  
        
        <if test="exons == true">
                JOIN feature_relationship fr2 ON fr2.object_id = transcript.feature_id and fr2.type_id IN (42, 69)
                JOIN feature exon ON fr2.subject_id = exon.feature_id
                JOIN cvterm exon_type ON exon.type_id = exon_type.cvterm_id AND exon_type.name = 'exon'
        </if>
        
        WHERE f.uniquename = #{gene.uniqueName} 
        
    </select>
    
    <resultMap type="org.genedb.crawl.model.Transcript" id="transcripts">
        <result property="uniqueName" column="uniqueName"/>
        <collection property="exons" ofType="org.genedb.crawl.model.Exon"> 
            <result property="uniqueName" column="exonUniqueName"/> 
        </collection>
    </resultMap>
    

</mapper>