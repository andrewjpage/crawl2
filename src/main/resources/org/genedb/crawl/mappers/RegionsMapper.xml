<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="org.genedb.crawl.mappers.RegionsMapper">  

  <cache type="org.mybatis.caches.hazelcast.LoggingHazelcastCache"/>
    
  
  <select id="locationsMinAndMaxBoundaries" resultType="org.genedb.crawl.model.LocationBoundaries">
    SELECT 
	    
	    min(fmin) as start, 
	    max(fmax) as end 
	    
	FROM feature f
	
	JOIN featureloc fl ON (f.feature_id = fl.feature_id AND fl.srcfeature_id = 
	   (select feature_id from feature where uniqueName = #{region} )  )
	JOIN cvterm t ON f.type_id = t.cvterm_id
	
	WHERE t.name in 
	    <foreach item="item" index="index" collection="types" open="(" separator="," close=")"> 
            #{item} 
        </foreach> 
	
	<![CDATA[
		AND (
		    (fl.fmin BETWEEN #{start} AND #{end} ) 
		    OR (fl.fmax BETWEEN #{start} AND #{end} ) 
		    OR ( fl.fmin <= #{start} AND fl.fmax >= #{end} ) 
		)
    ]]>
  </select>
  
  

 
  
  <select id="locations" resultMap="locations" >
    
    SELECT
    f.uniqueName as uniqueName,
    f.organism_id, 
    type.name as type,
    #{region} as region, 
    fl.fmin, 
    fl.fmax,
    fl.strand,
    fl.phase,
    f.is_obsolete,
    f2.uniquename as parent,
    frt.name as parent_relationship_type,
    fl.is_fmin_partial,
    fl.is_fmax_partial,
    
    'colour' as propname,
    fp.value as value
    
        FROM feature f
    
    JOIN cvterm type ON f.type_id = type.cvterm_id 
    JOIN featureloc fl ON (f.feature_id = fl.feature_id AND fl.srcfeature_id = 
        (select feature_id from feature where uniqueName = #{region} ) )
    
    LEFT OUTER JOIN feature_relationship fr ON f.feature_id = fr.subject_id
    LEFT JOIN feature f2 ON fr.object_id = f2.feature_id 
    JOIN cvterm frt ON fr.type_id = frt.cvterm_id AND frt.cvterm_id in 
                               (select cvterm_id from cvterm where name in ('part_of', 'derives_from'))  
	
	LEFT OUTER JOIN featureprop fp ON fp.feature_id = f.feature_id AND fp.type_id = (SELECT cvterm_id FROM cvterm WHERE name = 'colour') 
	
	
	WHERE 
	<![CDATA[
		
		(
		    (fl.fmin BETWEEN #{start} AND #{end} ) 
		    OR (fl.fmax BETWEEN #{start} AND #{end} ) 
		    OR ( fl.fmin <= #{start} AND fl.fmax >= #{end} ) 
		)
		
	]]>
	
	<include refid="types_exclude_filter"/>
	    
	ORDER BY fl.fmin, fl.fmax
	
  </select>
  
  <sql id="types_exclude_filter">
    <if test="types != null"> AND type.name <if test="exclude == true"> NOT </if> IN 
        <foreach item="item" index="index" collection="types" open="(" separator="," close=")"> 
            #{item} 
        </foreach> 
    </if>
  </sql>
  
  <resultMap type="org.genedb.crawl.model.LocatedFeature" id="locations">
    <result property="uniqueName" column="uniqueName"/>
    <result property="feature_id" column="feature_id"/>
    <result property="organism_id" column="organism_id"/>
    <result property="isObsolete" column="is_obsolete"/>
    <result property="strand" column="strand"/>
    <result property="phase" column="phase"/>
    <result property="region" column="region"/>
    <result property="fmin" column="fmin"/>
    <result property="fmax" column="fmax"/>
    <result property="parent" column="parent"/>
    <result property="parentRelationshipType" column="parent_relationship_type"/>
    <result property="fmin_partial" column="is_fmin_partial"/>
    <result property="fmax_partial" column="is_fmax_partial"/>
    
    <association property="type" javaType="org.genedb.crawl.model.Cvterm">
        <result property="name" column="type"/>
    </association>
    
    <collection property="properties" ofType="org.genedb.crawl.model.FeatureProperty"> 
        <result property="name" column="propname"/> 
        <result property="value" column="value"/> 
    </collection>
    
  </resultMap>
  
  <!-- <select id="sequence" resultType="org.genedb.crawl.model.Sequence">
        SELECT 
            residues as dna, 
            seqlen as length, 
            organism_id 
        FROM feature 
        WHERE uniqueName = #{region}
         
  </select> -->

  <select id="sequenceTrimmed" resultType="org.genedb.crawl.model.Sequence">
        SELECT 
            substring (residues from ${start} for (${end} - ${start})) as dna, 
            seqlen as length, 
            organism_id,
            '${start}' as start,
            '${end}' as end,
            '${region}' as region
        FROM feature 
        WHERE uniqueName = #{region}
  </select>
  
  <select id="sequenceLength" resultType="org.genedb.crawl.model.Sequence">
        SELECT  
            seqlen as length 
        FROM feature 
        WHERE uniqueName = #{region}
  </select>
  
  <select id="sequence" resultType="org.genedb.crawl.model.Sequence">
        SELECT 
            residues as dna, 
            seqlen as length, 
            organism_id,
            '${region}' as region
        FROM feature 
        WHERE uniqueName = #{region}
  </select>
  
  <sql id="topleveltype"> select cvterm_id from cvterm join cv using (cv_id) where cv.name = 'genedb_misc' and cvterm.name = 'top_level_seq' </sql> 
  
  <select id="inorganism" resultMap="inorganism">
        select f.uniquename, c.name as type 
        from feature f
		join featureprop using (feature_id)
		join cvterm c on f.type_id = c.cvterm_id
		where f.organism_id = #{organismid}
		  and featureprop.type_id = (<include refid="topleveltype"/>)
		
		<if test="type != null">
          and c.name = #{type} 
        </if>
        
        order by f.uniqueName
		
		<if test="limit != null">
		  LIMIT #{limit} 
		</if>
		<if test="offset != null">
		  OFFSET #{offset}
		</if>
			
  </select>
  
  <resultMap type="org.genedb.crawl.model.Feature" id="inorganism">
        <result property="uniqueName" column="uniqueName" />
        <association property="type" javaType="org.genedb.crawl.model.Cvterm">
            <result property="name" column="type" />
        </association>
    </resultMap>
  
  <select id="typesInOrganism" resultType="org.genedb.crawl.model.Cvterm">
        select distinct (c.name ) 
        from feature f
        join featureprop using (feature_id)
        join cvterm c on f.type_id = c.cvterm_id
        where f.organism_id = #{organismid}
            and featureprop.type_id = (<include refid="topleveltype"/>)
        
  </select>
  
</mapper> 
